<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:task="http://www.springframework.org/schema/task" xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd"
       default-lazy-init="true">

    <description>Spring Configuration</description>

<!-- 引入外部的属性变量 -->
    <context:property-placeholder ignore-unresolvable="true" location="classpath:config.properties" />
    
    
 <!-- 数据源 -->
    <!-- <bean id="drDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.ncCollect.driverClassName}"/>
        <property name="jdbcUrl" value="${jdbc.ncCollect.url}"/>
        <property name="user" value="${jdbc.ncCollect.username}"/>
        <property name="password" value="${jdbc.ncCollect.password}"/>
        <property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>
        <property name="minPoolSize" value="${jdbc.minPoolSize}"/>
        <property name="initialPoolSize" value="${jdbc.initialPoolSize}"/>
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
    </bean>
    
      SqlSessionFactory，同时指定数据源和mapper
         <bean id="drSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="drDataSource" />
        <property name="mapperLocations">
            <list>
                <value>classpath:/mappings/FlexUserInfoDAO.xml</value>
            </list>
        </property>
        <property name="configLocation" value="classpath:/config/mybatis-config.xml"></property>
    </bean>
    
      数据库 扫描basePackage下所有以@MyBatisDao注解的接口
    <bean id="mapperScannerConfigurer2" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="drSqlSessionFactory" />
        <property name="basePackage" value="com.tecsun.sisp.iface.server.model.collDao"/>
        <property name="annotationClass" value="com.tecsun.sisp.iface.common.util.MyBatisDao"/>
    </bean>
    
    事务管理 
      <bean id="trans_3" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
       注入连接池 
        <property name="dataSource" ref="drDataSource"/>
    </bean>
    配置事物管理的模板：spring为了简化事物管理的代码提供的类
       <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="drSqlSessionFactory" />
    </bean>



    验证码配置
    <bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
        <property name="config">
            <bean class="com.google.code.kaptcha.util.Config">
                <constructor-arg>
                    <props>
                        <prop key="kaptcha.border">yes</prop>
                        <prop key="kaptcha.textproducer.font.color">blue</prop>
                        <prop key="kaptcha.image.width">75</prop>
                        <prop key="kaptcha.textproducer.font.size">26</prop>
                        <prop key="kaptcha.textproducer.char.string">1234567890</prop>
                        <prop key="kaptcha.image.height">40</prop>
                        <prop key="kaptcha.session.key">code</prop>
                        <prop key="kaptcha.textproducer.char.space">3</prop>
                        <prop key="kaptcha.textproducer.char.length">4</prop>
                        <prop key="kaptcha.noise.impl">com.google.code.kaptcha.impl.NoNoise</prop>
                        <prop key="kaptcha.background.clear.to">white</prop>
                        <prop key="kaptcha.textproducer.font.names">楷体</prop>
                        <prop key="kaptcha.obscurificator.impl">com.google.code.kaptcha.impl.ShadowGimpy</prop>
                    </props>
                </constructor-arg>
            </bean>
        </property>
    </bean> -->
</beans>