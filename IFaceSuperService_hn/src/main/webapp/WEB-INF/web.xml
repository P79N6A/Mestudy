<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         id="WebApp_ID" version="2.5">

    <display-name>IFaceSuportService</display-name>

<!-- 指定Spring Bean的配置文件所在目录。默认配置在WEB-INF目录下 start -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath*:/config/applicationContext.xml</param-value>
    </context-param>
<!-- 指定Spring Bean的配置文件所在目录。默认配置在WEB-INF目录下 end -->

<context-param>
	<param-name>log4jConfigLocation</param-name>
	<param-value>/WEB-INF/log4j.properties</param-value>
</context-param>  
    

<!-- 编码过虑start -->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
<!-- 编码过虑end -->


    <!-- Spring监听 start-->
    <!-- ContextLoaderListener 是Spring项目的入口，他的作用是容器加载的时候，自动装配ApplicationContext的配置信息 -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- 自己写的监听类   -用于监听redis -->
    <listener>
        <listener-class>com.tecsun.sisp.iface.common.util.StartupListener</listener-class>
    </listener>
     <!-- Spring监听 end-->
    
<!--     <filter>
        <filter-name>XssEscape</filter-name>
        <filter-class>com.tecsun.sisp.iface.common.util.BusinessFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>XssEscape</filter-name>
        <url-pattern>/iface/card/*</url-pattern>
    </filter-mapping>  -->

    <!-- Spring MVC DispatcherServlet  start-->
    <!-- 当在web.xml文件将/后缀的请求交给org.springframework.web.servlet.DispatcherServlet后，他是怎样读取另外的springMVC-servlet.xml文件 -->
    <servlet>
        <servlet-name>springMVC3</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:config/springMVC-servlet.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>springMVC3</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    <!-- Spring MVC DispatcherServlet  end-->
    

    <!-- 解决HTTP PUT请求Spring无法获取请求参数的问题 start -->
    <!-- html中form表单只支持GET与POST请求，而DELETE、PUT等method并不支持，spring3.0添加了一个过滤器，可以将这些请求转换为标准的http方法，使得支持GET、POST、PUT与DELETE请求。start -->
    <filter>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <servlet-name>springMVC3</servlet-name>
    </filter-mapping>
    <!-- html中form表单只支持GET与POST请求，而DELETE、PUT等method并不支持，spring3.0添加了一个过滤器，可以将这些请求转换为标准的http方法，使得支持GET、POST、PUT与DELETE请求。end -->
     <!-- 解决HTTP PUT请求Spring无法获取请求参数的问题 end -->

     <welcome-file-list>
        <welcome-file>/WEB-INF/views/index.html</welcome-file>
    </welcome-file-list>
    
    <!-- 打印sql日志 start -->
    <context-param>  
        <param-name>log4jConfigLocation</param-name>  
        <param-value>/WEB-INF/log4j.xml</param-value>  
    </context-param>  
    <context-param>  
        <param-name>log4jRefreshInterval</param-name>  
        <param-value>60000</param-value>  
    </context-param>  
    <listener>  
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>  
    </listener>  
    
     <!-- 打印sql日志 end -->
     
      
</web-app>